[{"title":"test","url":"/archives/63534.html","content":"\n# 数据结构+算法(一)：递归与递推\n\n## 概念\n\n> <p align=\"left\">**递归**:函数存在本身调用自身的情况，这便是递归。递的意思就是将问题拆解成子问题进行求解，子问题再进一步求解，直到无法进一步细致。归的意思就是最小子问题的求解。递归解题通用解决思路：  </p>\n> <p align=\"left\">1.一个问题可以分解成具有相同解决思路的子问题（本质就是能调用同一个函数dfs）   </p>\n> <p align=\"left\">2.经过层层分解的子问题最后一定是有一个不能再分解的固定值的（即终止条件）。当具备以上条件时，我们即可在一定T复杂度下使用递归实现。 </p>\n> <p align=\"left\">**递推**:通过一定的公式或者堆砌将我们的结果从底层开始进行递推。</p>  \n\n## 例题\n\n### Question_1\n\n> 递归实现指数型枚举([原题链接]([92. 递归实现指数型枚举 - AcWing题库](https://www.acwing.com/problem/content/94/)))     \n\n### Answer_1\n\n> 对于该问题，我们每个数字都是选与不选两种情况，不妨将0视为低电平，1为高电平触发使用。  \n> 故我们可以利用二进制来表示每次的结果。  \n> 我们可以通过位运算来获取每次的值  \n> 代码如下:  \n\n```python\nn=int(input())\nfor i in range((1<<n)):\n    lst=[]\n    for k in range(n):\n        if i>>k & 1:\n            #说明该位为1\n            lst.append(str(k+1))\n    if len(lst)==0:\n        print(' ')\n    else:\n        print(' '.join(lst))\n```\n\n\n\n<div align=center>\n    <img src='../images/white_back.jpg' style=\"zoom:10%;\" />\n</div>\n\n\n\n\n\n\n​\t\n","tags":["测试"]},{"title":"Hello World","url":"/archives/16107.html","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]